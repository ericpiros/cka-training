BOX_IMAGE = "generic/ubuntu2004"
NODE_COUNT = 2

Vagrant.configure("2") do |kube|
  kube.vm.define "jumpbox" do |jumpbox|
    jumpbox.vm.box = BOX_IMAGE
	  jumpbox.vm.hostname = "jumpbox"
	  jumpbox.vm.network :private_network, ip: "192.168.73.4", hostname: true
    jumpbox.vm.synced_folder "./", "/vagrant", type: "rsync"
    jumpbox.vm.provider "libvirt" do |jumpboxconfig|
      # The qemu_use_session is only needed if you are using Fedora
      jumpboxconfig.qemu_use_session = false
	    jumpboxconfig.memory = 2048
	    jumpboxconfig.cpus = 2
	  end
  end

  kube.vm.define "master" do |kubemaster|
    kubemaster.vm.box = BOX_IMAGE
    kubemaster.vm.hostname = "master"
    kubemaster.vm.network :private_network, ip: "192.168.73.5", hostname: true
    kubemaster.vm.synced_folder "./", "/vagrant", type: "rsync"
    kubemaster.vm.provider "libvirt" do |masterconfig|
      # The qemu_use_session is only needed if you are using Fedora
      masterconfig.qemu_use_session = false
      masterconfig.memory = 4096
      masterconfig.cpus = 4
      #masterconfig.customize ["modifyvm", :id, "--nested-hw-virt", "on"]
    end
  end

  (1..NODE_COUNT).each do |count|
    kube.vm.define "node#{count}" do |kubeworker|
      kubeworker.vm.box = BOX_IMAGE
      kubeworker.vm.hostname = "node#{count}"
      kubeworker.vm.network :private_network, ip: "192.168.73.#{count + 10}", hostname: true
      kubeworker.vm.synced_folder "./", "/vagrant", type: "rsync"
      kubeworker.vm.provider "libvirt" do |workerconfig|
        # The qemu_use_session is only needed if you are using Fedora
        workerconfig.qemu_use_session = false
        workerconfig.memory = 2048
        workerconfig.cpus = 2
      #  workerconfig.customize ["modifyvm", :id, "--nested-hw-virt", "on"]
      end
    end
  end

  kube.vm.provision "shell", inline: <<-SHELL
    sudo apt update
    sudo apt install -y avahi-daemon libnss-mdns apt-transport-https ca-certificates curl
  SHELL
end
